{"version":3,"sources":["Components/AllPirates.js","Components/AddPirate.js","Components/OnePirate.js","App.js","serviceWorker.js","index.js"],"names":["AllPirates","useState","allPirates","setAllPirates","useEffect","getAllPirates","axios","get","then","res","sortpirates","data","results","sort","a","b","name","toLowerCase","catch","err","console","log","to","map","pirate","i","key","_id","onClick","e","id","delete","AddPirate","img","chest","catchPhrase","crewPosition","pegLeg","eyePatch","hookHand","setPirate","dynamicErrors","setDynamicErrors","errors","setErrors","changeHandler","target","value","className","onSubmit","preventDefault","post","message","navigate","errorResponse","response","errorArr","Object","keys","push","properties","style","color","htmlFor","type","onChange","length","nameHandler","chestHandler","phraseHandler","pegLegHandler","defaultChecked","eyePatchHandler","hookHandHandler","OnePirate","props","Axios","put","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"uQAiDeA,EA7CI,WAAO,IAAD,EACgBC,mBAAS,IADzB,mBACbC,EADa,KACDC,EADC,KAGrBC,qBAAU,WACNC,MACD,IAEH,IAAMA,EAAgB,WAClBC,IAAMC,IAAI,qCACLC,MAAM,SAAAC,GACH,IAAIC,EAAcD,EAAIE,KAAKC,QAC3BF,EAAYG,MAAK,SAACC,EAAEC,GAAH,OAAUD,EAAEE,KAAKC,cAAgBF,EAAEC,KAAKC,eAAkB,EAAI,KAC/Ed,EAAcO,MAEjBQ,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAI,SAAUF,OAU5C,OACI,6BACI,2CACA,kBAAC,IAAD,CAAMG,GAAG,QAAT,IAAiB,8CAAjB,KACA,6BACA,6BACA,6BAEIpB,EAAWqB,KAAI,SAACC,EAAQC,GAAT,OACf,yBAAKC,IAAKD,GAEF,4BAAKD,EAAOR,MACZ,kBAAC,IAAD,CAAMM,GAAE,kBAAaE,EAAOG,MAA5B,IAAoC,+CAApC,KACA,4BAAQC,QAAU,SAAAC,GAAC,OApBlBC,EAoBoCN,EAAOG,SAnB5DrB,IAAMyB,OAAN,4CAAkDD,IAC7CtB,KACGH,KAHS,IAAAyB,IAoBD,yB,cCoNTE,EAzPG,WAAO,IAAD,EACU/B,mBAAS,CACnCe,KAAM,GACNiB,IAAK,GACLC,MAAO,GACPC,YAAa,GACbC,aAAc,GACdC,QAAQ,EACRC,UAAU,EACVC,UAAU,IATM,mBACZf,EADY,KACJgB,EADI,OAWwBvC,mBAAS,CACjDe,KAAM,GACNkB,MAAO,GACPC,YAAa,KAdG,mBAWZM,EAXY,KAWGC,EAXH,OAgBUzC,mBAAS,IAhBnB,mBAgBZ0C,EAhBY,KAgBJC,EAhBI,KAkBdC,EAAgB,SAAAhB,GAClBW,EAAU,2BACHhB,GADE,kBAEJK,EAAEiB,OAAO9B,KAAOa,EAAEiB,OAAOC,UAqIlC,OACI,yBAAKC,UAAU,OACX,wBAAIA,UAAU,wBAAd,cADJ,OAEI,kBAAC,IAAD,CAAM1B,GAAG,KAAI,4BAAS0B,UAAU,uCAAnB,eACb,6BACA,6BACA,0BAAMC,SA9EQ,SAAApB,GAClBT,QAAQC,IAAIG,GACZK,EAAEqB,iBACF5C,IAAM6C,KAAK,wCAAyC3B,GAC/ChB,MAAM,SAAAC,GACqB,YAArBA,EAAIE,KAAKyC,UACRZ,EAAU,CACNxB,KAAM,GACNiB,IAAK,GACLC,MAAO,GACPC,YAAa,GACbC,aAAc,GACdC,QAAQ,EACRC,UAAU,EACVC,UAAU,IAEdc,YAAS,SAGhBnC,OAAO,SAAAC,GAGJ,IAFA,IAAMmC,EAAgBnC,EAAIoC,SAAS5C,KAAKgC,OAClCa,EAAW,GACjB,MAAkBC,OAAOC,KAAKJ,GAA9B,eAA6C,CAAxC,IAAM5B,EAAG,KACV8B,EAASG,KAAKL,EAAc5B,GAAKkC,WAAWR,SAEhDR,EAAUY,OAqDmBR,UAAU,aAC1CL,EAAOpB,KAAI,SAACJ,EAAKM,GAAN,OAAY,uBAAGC,IAAKD,EAAGoC,MAAO,CAACC,MAAO,QAAS3C,MACnD,uBAAG0C,MAAO,CAACC,MAAO,OAAQd,UAAU,wBAAwBP,EAAczB,MAC9E,yBAAKgC,UAAU,kBACX,2BAAOe,QAAQ,OAAOf,UAAU,wBAAhC,gBAGA,2BAAOgB,KAAK,OACZhD,KAAK,OACLiD,SAAW,SAAApC,GAAC,OAhJR,SAAAA,GAChBW,EAAU,2BACHhB,GADE,kBAEJK,EAAEiB,OAAO9B,KAAOa,EAAEiB,OAAOC,SAE3BlB,EAAEiB,OAAOC,MAAMmB,OAAS,GAA+B,IAA1BrC,EAAEiB,OAAOC,MAAMmB,OAC3CxB,EAAiB,2BACVD,GADS,kBAEXZ,EAAEiB,OAAO9B,KAAO,2CAIrB0B,EAAiB,2BACVD,GADS,kBAEXZ,EAAEiB,OAAO9B,KAAO,MAkIGmD,CAAYtC,IAC5BkB,MAAOvB,EAAOR,QAElB,yBAAKgC,UAAU,kBACX,2BAAOe,QAAQ,MAAMf,UAAU,wBAA/B,cAGA,2BAAOgB,KAAK,OACZhD,KAAK,MACLiD,SAAW,SAAApC,GAAC,OAAIgB,EAAchB,IAC9BkB,MAAOvB,EAAOS,OAEd,uBAAG4B,MAAO,CAACC,MAAO,OAAQd,UAAU,wBAAwBP,EAAcP,OAC9E,yBAAKc,UAAU,kBACX,2BAAOe,QAAQ,QAAQf,UAAU,wBAAjC,yBAGA,2BAAOgB,KAAK,SACZhD,KAAK,QACLiD,SAAW,SAAApC,GAAC,OAhJP,SAAAA,GACjBW,EAAU,2BACHhB,GADE,kBAEJK,EAAEiB,OAAO9B,KAAOa,EAAEiB,OAAOC,SAE3BlB,EAAEiB,OAAOC,OAAS,GAAwB,KAAnBlB,EAAEiB,OAAOC,MAC/BL,EAAiB,2BACVD,GADS,kBAEXZ,EAAEiB,OAAO9B,KAAO,0DAIrB0B,EAAiB,2BACVD,GADS,kBAEXZ,EAAEiB,OAAO9B,KAAO,MAkIGoD,CAAavC,IAC7BkB,MAAOvB,EAAOU,SAEd,uBAAG2B,MAAO,CAACC,MAAO,OAAQd,UAAU,wBAAwBP,EAAcN,aAC9E,yBAAKa,UAAU,kBACX,2BAAOe,QAAQ,cAAcf,UAAU,wBAAvC,wBAGA,2BAAOgB,KAAK,OACZhD,KAAK,cACLiD,SAAW,SAAApC,GAAC,OAvIN,SAAAA,GAClBW,EAAU,2BACHhB,GADE,kBAEJK,EAAEiB,OAAO9B,KAAOa,EAAEiB,OAAOC,SAE1BlB,EAAEiB,OAAOC,MAAMmB,OAAS,GAA+B,IAA1BrC,EAAEiB,OAAOC,MAAMmB,OAC5CxB,EAAiB,2BACVD,GADS,kBAEXZ,EAAEiB,OAAO9B,KAAO,qDAIrB0B,EAAiB,2BACVD,GADS,kBAEXZ,EAAEiB,OAAO9B,KAAO,MAyHGqD,CAAcxC,IAC9BkB,MAAOvB,EAAOW,eAElB,yBAAKa,UAAU,kBACX,2BAAOe,QAAQ,eAAef,UAAU,wBAAxC,kBAGA,4BAAQhC,KAAK,eAAeiD,SAAW,SAAApC,GAAC,OAAIgB,EAAchB,IAAKkB,MAAOvB,EAAOY,cACzE,4BAAQW,MAAM,WAAd,WACA,4BAAQA,MAAM,cAAd,cACA,4BAAQA,MAAM,iBAAd,iBACA,4BAAQA,MAAM,aAAd,aACA,4BAAQA,MAAM,iBAAd,mBAGR,yBAAKC,UAAU,kBACX,2BAAOe,QAAQ,SAASf,UAAU,wBAAlC,UAGA,2BAAOgB,KAAK,WACZhD,KAAK,SACLiD,SAAW,SAAApC,GAAC,OA5GE,SAAAA,IACI,IAAlBL,EAAOa,OACPG,EAAU,2BACHhB,GADE,kBAEJK,EAAEiB,OAAO9B,MAAO,KAIrBwB,EAAU,2BACHhB,GADE,kBAEJK,EAAEiB,OAAO9B,MAAO,KAkGLsD,CAAczC,IAC9BkB,MAAOvB,EAAOa,OAAQkC,gBAAiB,KAE3C,yBAAKvB,UAAU,kBACX,2BAAOe,QAAQ,WAAWf,UAAU,wBAApC,aAGA,2BAAOgB,KAAK,WACZhD,KAAK,WACLiD,SAAW,SAAApC,GAAC,OAzFI,SAAAA,IACI,IAApBL,EAAOc,SACPE,EAAU,2BACHhB,GADE,kBAEJK,EAAEiB,OAAO9B,MAAO,KAIrBwB,EAAU,2BACHhB,GADE,kBAEJK,EAAEiB,OAAO9B,MAAO,KA+ELwD,CAAgB3C,IAChCkB,MAAOvB,EAAOc,SAAUiC,gBAAiB,KAE7C,yBAAKvB,UAAU,kBACX,2BAAOe,QAAQ,WAAWf,UAAU,wBAApC,aAGA,2BAAOgB,KAAK,WACZhD,KAAK,WACLiD,SAAW,SAAApC,GAAC,OAhHI,SAAAA,IACI,IAApBL,EAAOe,SACPC,EAAU,2BACHhB,GADE,kBAEJK,EAAEiB,OAAO9B,MAAO,KAIrBwB,EAAU,2BACHhB,GADE,kBAEJK,EAAEiB,OAAO9B,MAAO,KAsGLyD,CAAgB5C,IAChCkB,MAAOvB,EAAOe,SAAUgC,gBAAiB,KAE7C,6BACA,2BAAOP,KAAK,SAASjB,MAAM,aAAcC,UAAU,6BClHpD0B,EA/HG,SAAAC,GAAU,IAAD,EACK1E,mBAAS,CACjCe,KAAM,GACNiB,IAAK,GACLC,MAAO,GACPC,YAAa,GACbC,aAAc,GACdC,OAAQ,GACRC,SAAU,GACVC,SAAU,KATS,mBAChBf,EADgB,KACRgB,EADQ,KAYvBpC,qBAAU,WACNwE,IAAMrE,IAAN,4CAA+CoE,EAAM7C,KAChDtB,MAAM,SAAAC,GACoB,YAApBA,EAAIE,KAAKyC,SACRZ,EAAU/B,EAAIE,KAAKC,YAG1BM,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAI,QAASF,QACxC,IAEH,IAUMmD,EAAgB,YACI,IAAlB9C,EAAOa,OACPG,EAAU,2BACHhB,GADE,IAELa,QAAQ,MAIZG,EAAU,2BACHhB,GADE,IAELa,QAAQ,KAEZuC,IAAMC,IAAN,4CAA+CrD,EAAOG,KAAOH,GAC5DhB,SAKHiE,EAAkB,SAAA5C,IACI,IAApBL,EAAOe,SACPC,EAAU,2BACHhB,GADE,IAELe,UAAU,KAIdC,EAAU,2BACHhB,GADE,IAELe,UAAU,KAGlBqC,IAAMC,IAAN,4CAA+CrD,EAAOG,KAAOH,GAC5DhB,QAICgE,EAAkB,SAAA3C,IACI,IAApBL,EAAOc,SACPE,EAAU,2BACHhB,GADE,IAELc,UAAU,KAIdE,EAAU,2BACHhB,GADE,IAELc,UAAU,KAGlBsC,IAAMC,IAAN,4CAA+CrD,EAAOG,KAAOH,GAC5DhB,QAKL,OACI,6BACI,4BAAKgB,EAAOR,MACZ,6BACA,6BACA,kBAAC,IAAD,CAAMM,GAAG,KAAI,+CACb,6BAEA,4BAAKE,EAAOW,aACZ,6BACA,6BACA,6BACI,qCACA,2BAAIX,EAAOY,cACX,qDAA2BZ,EAAOU,OAElCV,EAAOa,OACP,4CAAiB,4BAAQT,QAAW0C,GAAnB,OAEjB,2CAAgB,4BAAQ1C,QAAW0C,GAAnB,QAGhB9C,EAAOc,SACP,8CAAmB,4BAAQV,QAAW4C,GAAnB,OAEnB,6CAAkB,4BAAQ5C,QAAW4C,GAAnB,QAGlBhD,EAAOe,SACP,8CAAmB,4BAAQX,QAAW6C,GAAnB,OAEnB,6CAAkB,4BAAQ7C,QAAW6C,GAAnB,YCvGnBK,MAZf,WACE,OACE,yBAAK9B,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAY+B,KAAK,MACjB,kBAAC,EAAD,CAAWA,KAAK,SAChB,kBAAC,EAAD,CAAWA,KAAK,mBCDJC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBpF,MAAK,SAAAqF,GACJA,EAAaC,gBAEd5E,OAAM,SAAA6E,GACL3E,QAAQ2E,MAAMA,EAAM3C,c","file":"static/js/main.f4774935.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport { Link } from '@reach/router'\r\nimport axios from 'axios'\r\n\r\nconst AllPirates = () => {\r\n    const  [allPirates, setAllPirates] = useState([])\r\n\r\n    useEffect(() => {\r\n        getAllPirates()\r\n    }, [])\r\n\r\n    const getAllPirates = () => {\r\n        axios.get(\"http://localhost:8000/api/pirates\")\r\n            .then( res => {\r\n                let sortpirates = res.data.results\r\n                sortpirates.sort((a,b) => (a.name.toLowerCase() < b.name.toLowerCase()) ? -1 : 1)\r\n                setAllPirates(sortpirates)\r\n            })\r\n            .catch(err => console.log(\"failed\", err))\r\n    }\r\n\r\n    const deleteHandler= id => {\r\n        axios.delete(`http://localhost:8000/api/pirates/${id}`)\r\n            .then(\r\n                getAllPirates()\r\n            )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Pirate Crew</h1>\r\n            <Link to=\"/new\"> <button>Add Pirate</button> </Link>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            {\r\n                allPirates.map((pirate, i) => \r\n                <div key={i}>\r\n                        {/* <img src={pirate.img} /> */}\r\n                        <h2>{pirate.name}</h2>\r\n                        <Link to={`/pirate/${pirate._id}`}> <button>View Pirate</button> </Link>\r\n                        <button onClick={ e => deleteHandler(pirate._id) }>Walk the Plank!</button>\r\n                </div>\r\n                    )\r\n                }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllPirates\r\n","import React, {useState} from 'react'\r\nimport {Link, navigate} from '@reach/router'\r\nimport axios from 'axios'\r\n\r\nconst AddPirate = () => {\r\n    const [ pirate, setPirate ] = useState({\r\n        name: \"\",\r\n        img: \"\",\r\n        chest: \"\",\r\n        catchPhrase: \"\",\r\n        crewPosition: \"\",\r\n        pegLeg: true,\r\n        eyePatch: true,\r\n        hookHand: true,\r\n    })\r\n    const [ dynamicErrors, setDynamicErrors ] = useState({\r\n        name: \"\",\r\n        chest: \"\",\r\n        catchPhrase: \"\",\r\n    })\r\n    const [ errors, setErrors ] = useState([])\r\n\r\n    const changeHandler = e => {\r\n        setPirate({\r\n            ...pirate,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const nameHandler = e => {\r\n        setPirate({\r\n            ...pirate,\r\n            [e.target.name]: e.target.value\r\n        })\r\n        if(e.target.value.length < 3 && e.target.value.length !== 0){\r\n            setDynamicErrors({\r\n                ...dynamicErrors,\r\n                [e.target.name]: \"Name must be longer than 3 characters\"\r\n            })\r\n        }\r\n        else{\r\n            setDynamicErrors({\r\n                ...dynamicErrors,\r\n                [e.target.name]: \"\"\r\n            })\r\n        }\r\n    }\r\n\r\n    const chestHandler = e => {\r\n        setPirate({\r\n            ...pirate,\r\n            [e.target.name]: e.target.value\r\n        })\r\n        if(e.target.value <= 0 && e.target.value !== \"\"){\r\n            setDynamicErrors({\r\n                ...dynamicErrors,\r\n                [e.target.name]: \"Any good pirate would have at least 1 treasure chest\"\r\n            })\r\n        }\r\n        else{\r\n            setDynamicErrors({\r\n                ...dynamicErrors,\r\n                [e.target.name]: \"\"\r\n            })\r\n        }\r\n    }\r\n\r\n    const phraseHandler = e => {\r\n        setPirate({\r\n            ...pirate,\r\n            [e.target.name]: e.target.value\r\n        })\r\n        if( e.target.value.length < 5 && e.target.value.length !== 0){\r\n            setDynamicErrors({\r\n                ...dynamicErrors,\r\n                [e.target.name]: \"Catch Phrase should be longer than 5 characters\"\r\n            })\r\n        }\r\n        else{\r\n            setDynamicErrors({\r\n                ...dynamicErrors,\r\n                [e.target.name]: \"\"\r\n            })\r\n        }\r\n    }\r\n\r\n    const submitHandler = e => {\r\n        console.log(pirate)\r\n        e.preventDefault()\r\n        axios.post(\"http://localhost:8000/api/pirates/new\", pirate)\r\n            .then( res => {\r\n                if(res.data.message === \"success\"){\r\n                    setPirate({\r\n                        name: \"\",\r\n                        img: \"\",\r\n                        chest: \"\",\r\n                        catchPhrase: \"\",\r\n                        crewPosition: \"\",\r\n                        pegLeg: true,\r\n                        eyePatch: true,\r\n                        hookHand: true,\r\n                    })\r\n                    navigate(\"/\")\r\n                }\r\n            })\r\n            .catch( err => {\r\n                const errorResponse = err.response.data.errors;\r\n                const errorArr = [];\r\n                for (const key of Object.keys(errorResponse)){\r\n                    errorArr.push(errorResponse[key].properties.message)\r\n                }\r\n                setErrors(errorArr)\r\n            })\r\n        }\r\n\r\n            const pegLegHandler = e => {\r\n                if( pirate.pegLeg === true){\r\n                    setPirate({\r\n                        ...pirate,\r\n                        [e.target.name]: false\r\n                    })\r\n                }\r\n                else{\r\n                    setPirate({\r\n                        ...pirate,\r\n                        [e.target.name]: true\r\n                    })\r\n                }\r\n            }\r\n            const hookHandHandler = e => {\r\n                if( pirate.hookHand === true){\r\n                    setPirate({\r\n                        ...pirate,\r\n                        [e.target.name]: false\r\n                    })\r\n                }\r\n                else{\r\n                    setPirate({\r\n                        ...pirate,\r\n                        [e.target.name]: true\r\n                    })\r\n                }\r\n            }\r\n            const eyePatchHandler = e => {\r\n                if( pirate.eyePatch === true){\r\n                    setPirate({\r\n                        ...pirate,\r\n                        [e.target.name]: false\r\n                    })\r\n                }\r\n                else{\r\n                    setPirate({\r\n                        ...pirate,\r\n                        [e.target.name]: true\r\n                    })\r\n                }\r\n            }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <h1 className=\"col-sm-8 offset-sm-1\">Add Pirate</h1>&nbsp;\r\n            <Link to=\"/\"><button  className=\"col-lg-12 offset-sm-1 btn-secondary\">Crew Board</button></Link>\r\n            <br/>\r\n            <br/>\r\n            <form onSubmit={ submitHandler } className=\"col-sm-12\">\r\n            {errors.map((err, i) => <p key={i} style={{color: \"red\"}}>{err}</p> )}\r\n                    <p style={{color: \"red\"}} className=\"col-sm-4 offset-sm-1\">{dynamicErrors.name}</p>\r\n                <div className=\"form-group row\">\r\n                    <label htmlFor=\"name\" className=\"col-sm-4 offset-sm-1\">\r\n                        Pirate Name:\r\n                    </label>\r\n                    <input type=\"text\" \r\n                    name=\"name\"\r\n                    onChange={ e => nameHandler(e) }\r\n                    value={pirate.name}/>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <label htmlFor=\"img\" className=\"col-sm-4 offset-sm-1\">\r\n                        Image URL:\r\n                    </label>\r\n                    <input type=\"text\" \r\n                    name=\"img\"\r\n                    onChange={ e => changeHandler(e) }\r\n                    value={pirate.img}/>\r\n                </div>\r\n                    <p style={{color: \"red\"}} className=\"col-sm-4 offset-sm-1\">{dynamicErrors.chest}</p>\r\n                <div className=\"form-group row\" >\r\n                    <label htmlFor=\"chest\" className=\"col-sm-4 offset-sm-1\">\r\n                        # of Treasure Chests: \r\n                    </label>\r\n                    <input type=\"number\"\r\n                    name=\"chest\"\r\n                    onChange={ e => chestHandler(e) }\r\n                    value={pirate.chest}/>\r\n                </div>\r\n                    <p style={{color: \"red\"}} className=\"col-sm-4 offset-sm-1\">{dynamicErrors.catchPhrase}</p>\r\n                <div className=\"form-group row\">\r\n                    <label htmlFor=\"catchPhrase\" className=\"col-sm-4 offset-sm-1\">\r\n                        Pirate Catch Phrase:\r\n                    </label>\r\n                    <input type=\"text\" \r\n                    name=\"catchPhrase\"\r\n                    onChange={ e => phraseHandler(e) }\r\n                    value={pirate.catchPhrase}/>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <label htmlFor=\"crewPosition\" className=\"col-sm-4 offset-sm-1\">\r\n                        Crew Position:\r\n                    </label>\r\n                    <select name=\"crewPosition\" onChange={ e => changeHandler(e) } value={pirate.crewPosition} >\r\n                        <option value=\"Captian\">Captain</option>\r\n                        <option value=\"First Mate\">First Mate</option>\r\n                        <option value=\"Quater Master\">Quater Master</option>\r\n                        <option value=\"Boatswain\">Boatswain</option>\r\n                        <option value=\"Powder Monkey\">Powder Monkey</option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <label htmlFor=\"pegLeg\" className=\"col-sm-4 offset-sm-1\">\r\n                        Pegleg\r\n                    </label>\r\n                    <input type=\"checkbox\" \r\n                    name=\"pegLeg\"\r\n                    onChange={ e => pegLegHandler(e) }\r\n                    value={pirate.pegLeg} defaultChecked={ true }/>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <label htmlFor=\"eyePatch\" className=\"col-sm-4 offset-sm-1\">\r\n                        Eye Patch\r\n                    </label>\r\n                    <input type=\"checkbox\" \r\n                    name=\"eyePatch\"\r\n                    onChange={ e => eyePatchHandler(e) }\r\n                    value={pirate.eyePatch} defaultChecked={ true }/>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <label htmlFor=\"hookHand\" className=\"col-sm-4 offset-sm-1\">\r\n                        Hook Hand\r\n                    </label>\r\n                    <input type=\"checkbox\" \r\n                    name=\"hookHand\"\r\n                    onChange={ e => hookHandHandler(e) }\r\n                    value={pirate.hookHand} defaultChecked={ true } />\r\n                </div>\r\n                <div>\r\n                <input type=\"submit\" value=\"Add Pirate\"  className=\"col-sm-1 btn-primary\"/>\r\n                </div>\r\n            </form>\r\n        </div>\r\n            \r\n    )\r\n}\r\n\r\nexport default AddPirate\r\n","import React, { useEffect, useState } from 'react'\r\nimport Axios from 'axios'\r\nimport {Link} from '@reach/router'\r\n\r\nconst OnePirate = props => {\r\n    const [pirate, setPirate] = useState({\r\n        name: \"\",\r\n        img: \"\",\r\n        chest: \"\",\r\n        catchPhrase: \"\",\r\n        crewPosition: \"\",\r\n        pegLeg: \"\",\r\n        eyePatch: \"\",\r\n        hookHand: \"\",\r\n    })\r\n\r\n    useEffect(() => {\r\n        Axios.get(`http://localhost:8000/api/pirates/${props.id}`)\r\n            .then( res => {\r\n                if(res.data.message ===\"success\"){\r\n                    setPirate(res.data.results)\r\n                }\r\n            })\r\n            .catch(err => console.log(\"error\", err))\r\n    }, [])\r\n\r\n    const getPirate = () => {\r\n        Axios.get(`http://localhost:8000/api/pirates/${pirate._id}`)\r\n            .then( res => {\r\n                if(res.data.message ===\"success\"){\r\n                    setPirate(res.data.results)\r\n                }\r\n            })\r\n            .catch(err => console.log(\"error\", err))\r\n    }\r\n\r\n    const pegLegHandler = () => {\r\n        if( pirate.pegLeg === true){\r\n            setPirate({\r\n                ...pirate,\r\n                pegLeg: false\r\n            })\r\n        }\r\n        else{\r\n            setPirate({\r\n                ...pirate,\r\n                pegLeg: true\r\n            })\r\n            Axios.put(`http://localhost:8000/api/pirates/${pirate._id}`, pirate)\r\n            .then(\r\n                \r\n            )\r\n        }\r\n    }\r\n    const hookHandHandler = e => {\r\n        if( pirate.hookHand === true){\r\n            setPirate({\r\n                ...pirate,\r\n                hookHand: false\r\n            })\r\n        }\r\n        else{\r\n            setPirate({\r\n                ...pirate,\r\n                hookHand: true\r\n            })\r\n        }\r\n        Axios.put(`http://localhost:8000/api/pirates/${pirate._id}`, pirate)\r\n        .then(\r\n            \r\n        )\r\n    }\r\n    const eyePatchHandler = e => {\r\n        if( pirate.eyePatch === true){\r\n            setPirate({\r\n                ...pirate,\r\n                eyePatch: false\r\n            })\r\n        }\r\n        else{\r\n            setPirate({\r\n                ...pirate,\r\n                eyePatch: true\r\n            })\r\n        }\r\n        Axios.put(`http://localhost:8000/api/pirates/${pirate._id}`, pirate)\r\n        .then(\r\n            \r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>{pirate.name}</h1>\r\n            <br/>\r\n            <br/>\r\n            <Link to=\"/\"><button>Crew Board</button></Link>\r\n            <div>\r\n            {/* <img src={pirate.img} alt=\"\"/> */}\r\n            <h3>{pirate.catchPhrase}</h3>\r\n            <br/>\r\n            <br/>\r\n            <div>\r\n                <h4>About</h4>\r\n                <p>{pirate.crewPosition}</p>\r\n                <p># of treasure chest's: {pirate.chest}</p>\r\n                {\r\n                pirate.pegLeg?\r\n                <p>Peg Leg: Yes  <button onClick={  pegLegHandler }>No</button></p>\r\n                :\r\n                <p>Peg Leg: No  <button onClick={  pegLegHandler }>Yes</button></p>\r\n            }\r\n                {\r\n                pirate.eyePatch?\r\n                <p>Eye Patch: Yes  <button onClick={  eyePatchHandler }>No</button></p>\r\n                :\r\n                <p>Eye Patch: No  <button onClick={  eyePatchHandler }>Yes</button></p>\r\n                }\r\n                {\r\n                pirate.hookHand?\r\n                <p>Hook Hand: Yes  <button onClick={  hookHandHandler }>No</button></p>\r\n                :\r\n                <p>Hook Hand: No  <button onClick={  hookHandHandler }>Yes</button></p>\r\n                }\r\n            </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OnePirate\r\n","import React from 'react';\nimport './App.css';\nimport {Router} from '@reach/router'\nimport AllPirates from './Components/AllPirates'\nimport AddPirate from './Components/AddPirate';\nimport OnePirate from './Components/OnePirate';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <AllPirates path=\"/\"/>\n        <AddPirate path=\"/new\"/>\n        <OnePirate path=\"/pirate/:id\"/>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}